@import "../node_modules/bootstrap/scss/_functions.scss";
// required here before variables because Bootstrap 4 is still in beta
@import "../node_modules/bootstrap/scss/_variables.scss";
@import "../node_modules/bootstrap/scss/mixins/_border-radius.scss";
@import "_variables.scss";

$breakpoint-small: nth($breakpoints, 1);
$breakpoint-large: nth($breakpoints, 2);

@media screen and (min-width: $breakpoint-small) {
  #cv-app {
    display: grid;
    grid-template-rows: 8fr 1fr;
    grid-template-columns: 1fr 3fr;
  }
}

#cv-app {
  background: linear-gradient(to bottom right, $gray-400, transparent);
}

h1 {
  font-family: 'Amatic SC', sans-serif; // overriding Bootstrap with a downloaded font and a fallback
  color: $indigo;
  text-align: center;
}

aside {
  display: flex;
  align-items: center;
  flex-flow: column nowrap;

  grid-area: 1 / 1 / 3 / 2;
}

#navigation {
  @media screen and (max-width: $breakpoint-small) {
    display: none;
  }
}

#details {
  grid-area: 1 / 2 / 2 / 3;
  justify-self: center;
}

.work {
  color: $work-color;

  a {
    color: $work-color;
  }

  > * {
    background-color: $work-background-color;
    padding: 1rem;
  }

  @media screen and (max-width: $breakpoint-small) {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
    grid-gap: 1rem;

    .custom-card {
      // Note: can't use the class "card" because of a collision with Bootstrap
      border-radius: 5px;
      cursor: pointer;

      transform-style: preserve-3d;
      transition: 0.5s;
      position: relative; // required to position 'absolutely' the .front and .back

      .back {
        transform: rotateY(-180deg); // This should work with +180deg as well but Chrome made the text disappear after the tranformation
        position: absolute;
        right: 1rem; // same as the padding applied on the parent
        top: 1rem; // ditto
      }

      .front, .back {
        backface-visibility: hidden; // experimental property: Mozilla doesn't respect this when .clicked is applied, even with a -moz prefix

        // CSS transformations are applied on 'transformable' elements which are block and inline-block elements: https://stackoverflow.com/a/14883287/2259743
        // For some reason, using span + inline-block worked better than simply using divs
        display: inline-block;
      }

      &.clicked {
        transform: rotateY(180deg);
      }
    }

    #doodle-cto {
      grid-area: 1 / 1 / 2 / 4;
    }

    #doodle-dev {
      grid-area: 1 / 4 / 2 / 6;
    }

    #dacuda {
      grid-area: 2 / 1 / 3 / 3;
    }

    .read-more {
      grid-area: 2 / 3 / 3 / 6;
    }
  }

  @media screen and (min-width: $breakpoint-small) {
    display: flex;
    flex-direction: column;

    > * {
      border-bottom: 1px solid $gray-300;
    }

    .meta {
      display: flex;
      align-items: baseline;
      padding-bottom: 1rem;
      justify-content: space-between;

      .title-company {
        flex: 0 0 auto;
      }

      .dates-location {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex: 0 10 auto;
      }
    }

    .read-more {
      order: 10; // make it last
      text-align: center;
    }
  }

  .linkedin-logo {
    vertical-align: sub;
  }

  #doodle-cto .description::after {
    @media screen and (min-width: $breakpoint-large) {
      content: " About engineering culture: I introduced regular 1-1s with all devs, sponsored education and workshop requests for developers, introduced a 360 review process (inspired by Google) which was eventually adopted by the rest of the company, advocated opening up Doodle’s API to external developers. Highlights on scaling the team: I proposed a new company structure (based on Spotify) which was accepted by the rest of management team, introduced a new hiring process, mentored team leads and proposed Doodle’s first career path for engineers. These enabled Doodle to double its web developers in a year while also integrating and instilling a healthy engineering culture across all remote offices (Zürich, Berlin, Tel Aviv).
 Highlights on technical work: introduced Scrum in the platform team, pushed further Doodle's move to the cloud, active monitoring of servers and better testing environments. These allowed Doodle to redesign its whole service and also experiment with new micro services and technologies, while maintaining a 99.999% availability level.";
    }
  }
}

footer {
  @media screen and (min-width: 640px) {
    grid-area: 2 / 2 / 3 / 3;
    align-self: center;
    justify-self: center;
  }

  @media screen and (max-width: 640px) {
    text-align: center;
  }
}
